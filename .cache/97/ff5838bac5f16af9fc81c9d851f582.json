{"id":"node_modules/js-yaml/lib/js-yaml/schema/core.js","dependencies":[{"name":"/home/encima/dev/uzh/client/package.json","includedInParent":true,"mtime":1569848817260},{"name":"/home/encima/dev/uzh/client/.babelrc","includedInParent":true,"mtime":1569840579421},{"name":"/home/encima/dev/uzh/client/node_modules/js-yaml/package.json","includedInParent":true,"mtime":1569844911303},{"name":"../schema","loc":{"line":11,"column":21},"parent":"/home/encima/dev/uzh/client/node_modules/js-yaml/lib/js-yaml/schema/core.js","resolved":"/home/encima/dev/uzh/client/node_modules/js-yaml/lib/js-yaml/schema.js"},{"name":"./json","loc":{"line":16,"column":12},"parent":"/home/encima/dev/uzh/client/node_modules/js-yaml/lib/js-yaml/schema/core.js","resolved":"/home/encima/dev/uzh/client/node_modules/js-yaml/lib/js-yaml/schema/json.js"}],"generated":{"js":"// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/js-yaml/lib/js-yaml/schema/core.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"node_modules/js-yaml/lib/js-yaml/schema/core.js":"// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n"},"lineCount":19}},"error":null,"hash":"f8b8bffb071cbf5810061ca91cd8206b","cacheData":{"env":{}}}