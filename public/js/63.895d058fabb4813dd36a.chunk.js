(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{oxbM:function(r,e,t){"use strict";var o={meters:6371008.8,metres:6371008.8,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:6371008.8/1852,inches:6371008.8*39.37,yards:6371008.8/1.0936,feet:20902260.511392,radians:1,degrees:6371008.8/111325};function n(r,e,t){if(!c(t=t||{}))throw new Error("options is invalid");var o=t.bbox,n=t.id;if(void 0===r)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");o&&l(o),n&&y(n);var i={type:"Feature"};return n&&(i.id=n),o&&(i.bbox=o),i.properties=e||{},i.geometry=r,i}function i(r,e,t){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!f(r[0])||!f(r[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:r},e,t)}function a(r,e){if(!c(e=e||{}))throw new Error("options is invalid");var t=e.bbox,o=e.id;if(!r)throw new Error("No features passed");if(!Array.isArray(r))throw new Error("features must be an Array");t&&l(t),o&&y(o);var n={type:"FeatureCollection"};return o&&(n.id=o),t&&(n.bbox=t),n.features=r,n}function s(r,e){if(void 0===r||null===r)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var t=o[e||"kilometers"];if(!t)throw new Error(e+" units is invalid");return r*t}function u(r){if(null===r||void 0===r)throw new Error("degrees is required");return r%360*Math.PI/180}function f(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}function c(r){return!!r&&r.constructor===Object}function l(r){if(!r)throw new Error("bbox is required");if(!Array.isArray(r))throw new Error("bbox must be an Array");if(4!==r.length&&6!==r.length)throw new Error("bbox must be an Array of 4 or 6 numbers");r.forEach(function(r){if(!f(r))throw new Error("bbox must only contain numbers")})}function y(r){if(!r)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof r))throw new Error("id must be a number or a string")}function g(r,e,t){if(null!==r)for(var o,n,i,a,s,u,f,c,l=0,y=0,h=r.type,d="FeatureCollection"===h,w="Feature"===h,p=d?r.features.length:1,m=0;m<p;m++){s=(c=!!(f=d?r.features[m].geometry:w?r.geometry:r)&&"GeometryCollection"===f.type)?f.geometries.length:1;for(var b=0;b<s;b++){var v=0,E=0;if(null!==(a=c?f.geometries[b]:f)){u=a.coordinates;var M=a.type;switch(l=!t||"Polygon"!==M&&"MultiPolygon"!==M?0:1,M){case null:break;case"Point":if(!1===e(u,y,m,v,E))return!1;y++,v++;break;case"LineString":case"MultiPoint":for(o=0;o<u.length;o++){if(!1===e(u[o],y,m,v,E))return!1;y++,"MultiPoint"===M&&v++}"LineString"===M&&v++;break;case"Polygon":case"MultiLineString":for(o=0;o<u.length;o++){for(n=0;n<u[o].length-l;n++){if(!1===e(u[o][n],y,m,v,E))return!1;y++}"MultiLineString"===M&&v++,"Polygon"===M&&E++}"Polygon"===M&&v++;break;case"MultiPolygon":for(o=0;o<u.length;o++){for("MultiPolygon"===M&&(E=0),n=0;n<u[o].length;n++){for(i=0;i<u[o][n].length-l;i++){if(!1===e(u[o][n][i],y,m,v,E))return!1;y++}E++}v++}break;case"GeometryCollection":for(o=0;o<a.geometries.length;o++)if(!1===g(a.geometries[o],e,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function h(r,e){if("Feature"===r.type)e(r,0);else if("FeatureCollection"===r.type)for(var t=0;t<r.features.length&&!1!==e(r.features[t],t);t++);}var d=function(r){var e=[];return"FeatureCollection"===r.type?h(r,function(r){g(r,function(t){e.push(i(t,r.properties))})}):g(r,function(t){e.push(i(t,r.properties))}),a(e)};var w=function(r){var e=[1/0,1/0,-1/0,-1/0];return g(r,function(r){e[0]>r[0]&&(e[0]=r[0]),e[1]>r[1]&&(e[1]=r[1]),e[2]<r[0]&&(e[2]=r[0]),e[3]<r[1]&&(e[3]=r[1])}),e};var p=function(r,e){if(!c(e=e||{}))throw new Error("options is invalid");var t=e.properties;if(!r)throw new Error("geojson is required");var o=w(r);return i([(o[0]+o[2])/2,(o[1]+o[3])/2],t)};function m(r){var e={type:"Feature"};return Object.keys(r).forEach(function(t){switch(t){case"type":case"properties":case"geometry":return;default:e[t]=r[t]}}),e.properties=function r(e){var t={};if(!e)return t;Object.keys(e).forEach(function(o){var n=e[o];"object"==typeof n?null===n?t[o]=null:n.length?t[o]=n.map(function(r){return r}):t[o]=r(n):t[o]=n});return t}(r.properties),e.geometry=b(r.geometry),e}function b(r){var e={type:r.type};return r.bbox&&(e.bbox=r.bbox),"GeometryCollection"===r.type?(e.geometries=r.geometries.map(function(r){return b(r)}),e):(e.coordinates=function r(e){if("object"!=typeof e[0])return e.slice();return e.map(function(e){return r(e)})}(r.coordinates),e)}var v=function(r){if(!r)throw new Error("geojson is required");switch(r.type){case"Feature":return m(r);case"FeatureCollection":return function(r){var e={type:"FeatureCollection"};return Object.keys(r).forEach(function(t){switch(t){case"type":case"features":return;default:e[t]=r[t]}}),e.features=r.features.map(function(r){return m(r)}),e}(r);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return b(r);default:throw new Error("unknown GeoJSON type")}};function E(r){if(!r)throw new Error("coord is required");if("Feature"===r.type&&null!==r.geometry&&"Point"===r.geometry.type)return r.geometry.coordinates;if("Point"===r.type)return r.coordinates;if(Array.isArray(r)&&r.length>=2&&void 0===r[0].length&&void 0===r[1].length)return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}var M=function(r,e,t){if(!c(t=t||{}))throw new Error("options is invalid");var o=t.units,n=E(r),i=E(e),a=u(i[1]-n[1]),f=u(i[0]-n[0]),l=u(n[1]),y=u(i[1]),g=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(f/2),2)*Math.cos(l)*Math.cos(y);return s(2*Math.atan2(Math.sqrt(g),Math.sqrt(1-g)),o)};var P=function(r,e){if(!r)throw new Error("targetPoint is required");if(!e)throw new Error("points is required");var t,o=1/0;return h(e,function(e,n){var i=M(r,e);i<o&&((t=v(e)).properties.featureIndex=n,t.properties.distanceToPoint=i,o=i)}),t};function q(r,e,t){var o=!1;e[0][0]===e[e.length-1][0]&&e[0][1]===e[e.length-1][1]&&(e=e.slice(0,e.length-1));for(var n=0,i=e.length-1;n<e.length;i=n++){var a=e[n][0],s=e[n][1],u=e[i][0],f=e[i][1];if(r[1]*(a-u)+s*(u-r[0])+f*(r[0]-a)==0&&(a-r[0])*(u-r[0])<=0&&(s-r[1])*(f-r[1])<=0)return!t;s>r[1]!=f>r[1]&&r[0]<(u-a)*(r[1]-s)/(f-s)+a&&(o=!o)}return o}var A=function(r,e,t){if("object"!=typeof(t=t||{}))throw new Error("options is invalid");var o=t.ignoreBoundary;if(!r)throw new Error("point is required");if(!e)throw new Error("polygon is required");var n=E(r),i=function(r){if(!r)throw new Error("coords is required");if("Feature"===r.type&&null!==r.geometry)return r.geometry.coordinates;if(r.coordinates)return r.coordinates;if(Array.isArray(r))return r;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}(e),a=e.geometry?e.geometry.type:e.type,s=e.bbox;if(s&&!1===function(r,e){return e[0]<=r[0]&&e[1]<=r[1]&&e[2]>=r[0]&&e[3]>=r[1]}(n,s))return!1;"Polygon"===a&&(i=[i]);for(var u=0,f=!1;u<i.length&&!f;u++)if(q(n,i[u][0],o)){for(var c=!1,l=1;l<i[u].length&&!c;)q(n,i[u][l],!o)&&(c=!0),l++;c||(f=!0)}return f};function k(r,e,t,o,n,i){return Math.sqrt((n-t)*(n-t)+(i-o)*(i-o))===Math.sqrt((r-t)*(r-t)+(e-o)*(e-o))+Math.sqrt((n-r)*(n-r)+(i-e)*(i-e))}e.a=function(r){for(var e=function(r){return"FeatureCollection"!==r.type?"Feature"!==r.type?a([n(r)]):a([r]):r}(r),t=p(e),o=!1,s=0;!o&&s<e.features.length;){var u,f=e.features[s].geometry,c=!1;if("Point"===f.type)t.geometry.coordinates[0]===f.coordinates[0]&&t.geometry.coordinates[1]===f.coordinates[1]&&(o=!0);else if("MultiPoint"===f.type){var l=!1;for(u=0;!l&&u<f.coordinates.length;)t.geometry.coordinates[0]===f.coordinates[u][0]&&t.geometry.coordinates[1]===f.coordinates[u][1]&&(o=!0,l=!0),u++}else if("LineString"===f.type)for(u=0;!c&&u<f.coordinates.length-1;)k(t.geometry.coordinates[0],t.geometry.coordinates[1],f.coordinates[u][0],f.coordinates[u][1],f.coordinates[u+1][0],f.coordinates[u+1][1])&&(c=!0,o=!0),u++;else if("MultiLineString"===f.type)for(var y=0;y<f.coordinates.length;){c=!1,u=0;for(var g=f.coordinates[y];!c&&u<g.length-1;)k(t.geometry.coordinates[0],t.geometry.coordinates[1],g[u][0],g[u][1],g[u+1][0],g[u+1][1])&&(c=!0,o=!0),u++;y++}else"Polygon"!==f.type&&"MultiPolygon"!==f.type||A(t,f)&&(o=!0);s++}if(o)return t;var h=a([]);for(s=0;s<e.features.length;s++)h.features=h.features.concat(d(e.features[s]).features);return i(P(t,h).geometry.coordinates)}}}]);